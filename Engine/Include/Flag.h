
#pragma once

enum AXIS
{
	AXIS_X,
	AXIS_Y,
	AXIS_Z,
	AXIS_MAX
};

enum SHADER_TYPE
{
	ST_VERTEX,
	ST_PIXEL,
	ST_END
};

enum TRANSFORM_RULE
{
	TR_SCALE = 0x1,
	TR_ROT = 0x2,
	TR_POS = 0x4,
	TR_ALL = 0x7
};

enum CBUFFER_SHADER_TYPE
{
	CST_VERTEX = 0x1,
	CST_PIXEL = 0x2
};

enum COMPONENT_TYPE
{
	CT_SCENE,
	CT_OBJECT
};

enum CAMERA_TYPE
{
	CT_PERSPECTIVE,
	CT_ORTHOGONAL
};

enum RENDER_STATE_TYPE
{
	RST_BLEND,
	RST_DEPTH,
	RST_RASTERIZER,
	RST_END
};

enum ANIMATION_2D_TYPE
{
	A2T_ATLAS,
	A2T_FRAME
};

enum COLLIDER_TYPE
{
	COLLIDER_RECT,
	COLLIDER_SPHERE2D,
	COLLIDER_OBB2D,
	COLLIDER_PIXEL,
	COLLIDER_POINT
};

enum COLLISION_TYPE
{
	CT_NONE = -1,
	CT_BLOCK,
	CT_OVERLAP,
	CT_IGNORE
};

enum RENDER_GROUP
{
	RG_ENVIRONMENT,
	RG_DEFAULT,
	RG_ALPHA,
	RG_UI,
	RG_END
};

enum MATERIAL_SHADER_STYLE
{
	MSS_ENVIRONMENT,
	MSS_DEFAULT,
	MSS_ALPHA,
	MSS_UI
};

enum RENDER_MODE
{
	RM_2D,
	RM_3D
};

enum BUTTON_STATE
{
	BS_DISABLE,
	BS_NORMAL,
	BS_MOUSEON,
	BS_CLICK,
	BS_END
};

enum BUTTON_EVENT
{
	BE_NONE,
	BE_ENABLE,
	BE_MOUSEON,
	BE_CLICK,
	BE_MOUSEOFF,
	BE_DISABLE,
	BE_END
};

enum BAR_DIR
{
	BD_LEFTFROMRIGHT,
	BD_RIGHTFROMLEFT,
	BD_TOPFROMBOTTOM,
	BD_BOTTOMFROMTOP
};

enum SCENE_CHANGE
{
	SC_NONE,
	SC_CHANGE
};

enum TILE_TYPE
{
	TT_NONE,
	TT_RECT,
	TT_ISOMETRIC
};

enum TILE_OPTION
{
	TO_NONE,
	TO_NOMOVE
};

enum IMAGE_TYPE
{
	IT_ATLAS,
	IT_ARRAY
};

enum NAV_INSERT_TYPE
{
	NIT_NONE,
	NIT_OPEN,
	NIT_CLOSE
};

enum NAV_NODE_DIR
{
	NND_LT,
	NND_T,
	NND_RT,
	NND_R,
	NND_RB,
	NND_B,
	NND_LB,
	NND_L,
	NND_END
};

enum NAV_TYPE
{
	NT_2D,
	NT_3D,
	NT_END
};