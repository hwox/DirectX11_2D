  MainGameMode.cpp
e:\lecture\26th\directx\gameengine\engine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.14393.0\um\directxmath.h(451): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
e:\lecture\26th\directx\gameengine\engine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring(3997): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
e:\lecture\26th\directx\gameengine\engine\include\component\scenecomponent.h(15): warning C4251: 'CSceneComponent::m_vecChild': class 'std::vector<CSceneComponent *,std::allocator<_Ty>>'에서는 class 'CSceneComponent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CSceneComponent *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\scenecomponent.h(15): note: 'std::vector<CSceneComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CSceneComponent *
          ]
e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(19): warning C4251: 'CGameObject::m_vecObjComponent': class 'std::vector<CObjectComponent *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CObjectComponent *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(19): note: 'std::vector<CObjectComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CObjectComponent *
          ]
e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(20): warning C4251: 'CGameObject::m_vecChild': class 'std::vector<CGameObject *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(20): note: 'std::vector<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(22): warning C4251: 'CGameObject::m_BeginList': class 'std::list<CComponent *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CComponent *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(22): note: 'std::list<CComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CComponent *
          ]
e:\lecture\26th\directx\gameengine\engine\include\scene\scene.h(26): warning C4251: 'CScene::m_ObjList': class 'std::list<CGameObject *,std::allocator<_Ty>>'에서는 class 'CScene'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\scene\scene.h(26): note: 'std::list<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
e:\lecture\26th\directx\gameengine\engine\include\scene\scene.h(27): warning C4251: 'CScene::m_BeginList': class 'std::list<CGameObject *,std::allocator<_Ty>>'에서는 class 'CScene'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\scene\scene.h(26): note: 'std::list<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(8): warning C4251: 'CResourceManager::m_mapMesh': class 'std::unordered_map<::size_t,CMesh *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CMesh *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(8): note: 'std::unordered_map<::size_t,CMesh *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CMesh *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(9): warning C4251: 'CResourceManager::m_mapTexture': class 'std::unordered_map<::size_t,CTexture *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CTexture *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(9): note: 'std::unordered_map<::size_t,CTexture *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CTexture *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(10): warning C4251: 'CResourceManager::m_mapMaterial': class 'std::unordered_map<::size_t,CMaterial *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CMaterial *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(10): note: 'std::unordered_map<::size_t,CMaterial *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CMaterial *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(11): warning C4251: 'CResourceManager::m_mapSampler': class 'std::unordered_map<::size_t,ID3D11SamplerState *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=ID3D11SamplerState *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(11): note: 'std::unordered_map<::size_t,ID3D11SamplerState *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=ID3D11SamplerState *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(12): warning C4251: 'CResourceManager::m_mapRenderState': class 'std::unordered_map<::size_t,CRenderState *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CRenderState *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(12): note: 'std::unordered_map<::size_t,CRenderState *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CRenderState *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(13): warning C4251: 'CResourceManager::m_mapAnim2DSequence': class 'std::unordered_map<::size_t,CAnimation2DSequence *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CAnimation2DSequence *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(13): note: 'std::unordered_map<::size_t,CAnimation2DSequence *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CAnimation2DSequence *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): warning C4251: 'CResourceManager::m_DefaultMeshList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(15): warning C4251: 'CResourceManager::m_DefaultTextureList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(16): warning C4251: 'CResourceManager::m_DefaultRenderStateList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(17): warning C4251: 'CResourceManager::m_DefaultMaterialList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(18): warning C4251: 'CResourceManager::m_MaterialIter': class 'std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<const _Kty,_Ty>>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CMaterial *
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list(571): note: 'std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<const _Kty,_Ty>>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CMaterial *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\material.h(44): warning C4251: 'CMaterial::m_vecContainer': class 'std::vector<PMaterialContainer,std::allocator<_Ty>>'에서는 class 'CMaterial'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PMaterialContainer
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\material.h(44): note: 'std::vector<PMaterialContainer,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PMaterialContainer
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\material.h(48): warning C4251: 'CMaterial::m_mapCBuffer': class 'std::unordered_map<::size_t,PCBufferNode,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CMaterial'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=PCBufferNode
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\material.h(48): note: 'std::unordered_map<::size_t,PCBufferNode,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=PCBufferNode
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\animation2dsequence.h(41): warning C4251: 'CAnimation2DSequence::m_vecTexture': class 'std::vector<CTexture *,std::allocator<_Ty>>'에서는 class 'CAnimation2DSequence'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CTexture *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\animation2dsequence.h(41): note: 'std::vector<CTexture *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CTexture *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\animation2dsequence.h(51): warning C4251: 'CAnimation2DSequence::m_NotifyList': class 'std::list<PAnim2DNotify,std::allocator<_Ty>>'에서는 class 'CAnimation2DSequence'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PAnim2DNotify
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\animation2dsequence.h(51): note: 'std::list<PAnim2DNotify,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PAnim2DNotify
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\animation2dsequence.h(52): warning C4251: 'CAnimation2DSequence::m_vecFrameInfo': class 'std::vector<Animation2DFrameInfo,std::allocator<_Ty>>'에서는 class 'CAnimation2DSequence'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=Animation2DFrameInfo
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\animation2dsequence.h(52): note: 'std::vector<Animation2DFrameInfo,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=Animation2DFrameInfo
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\animation2dsequence.h(55): warning C4251: 'CAnimation2DSequence::m_strReturnSequence': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CAnimation2DSequence'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring(3997): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
e:\lecture\26th\directx\gameengine\engine\include\collisionmanager.h(18): warning C4251: 'CCollisionManager::m_ChannelList': class 'std::list<PCollisionChannel,std::allocator<_Ty>>'에서는 class 'CCollisionManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PCollisionChannel
          ]
  e:\lecture\26th\directx\gameengine\engine\include\collisionmanager.h(18): note: 'std::list<PCollisionChannel,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PCollisionChannel
          ]
e:\lecture\26th\directx\gameengine\engine\include\collisionmanager.h(19): warning C4251: 'CCollisionManager::m_mapProfile': class 'std::unordered_map<::size_t,PCollisionProfile,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CCollisionManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=PCollisionProfile
          ]
  e:\lecture\26th\directx\gameengine\engine\include\collisionmanager.h(19): note: 'std::unordered_map<::size_t,PCollisionProfile,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=PCollisionProfile
          ]
e:\lecture\26th\directx\gameengine\engine\include\collisionmanager.h(20): warning C4251: 'CCollisionManager::m_ColliderList': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CCollisionManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\collisionmanager.h(20): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
e:\lecture\26th\directx\gameengine\engine\include\input.h(120): warning C4251: 'CInput::m_tKeyInfo': struct '_tagKeyInfo'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  e:\lecture\26th\directx\gameengine\engine\include\input.h(29): note: '_tagKeyInfo' 선언을 참조하십시오.
e:\lecture\26th\directx\gameengine\engine\include\input.h(122): warning C4251: 'CInput::m_mapAxis': class 'std::unordered_map<::size_t,PKeyAxis,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=PKeyAxis
          ]
  e:\lecture\26th\directx\gameengine\engine\include\input.h(122): note: 'std::unordered_map<::size_t,PKeyAxis,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=PKeyAxis
          ]
e:\lecture\26th\directx\gameengine\engine\include\input.h(123): warning C4251: 'CInput::m_mapAction': class 'std::unordered_map<::size_t,PKeyAction,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=PKeyAction
          ]
  e:\lecture\26th\directx\gameengine\engine\include\input.h(123): note: 'std::unordered_map<::size_t,PKeyAction,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=PKeyAction
          ]
e:\lecture\26th\directx\gameengine\engine\include\input.h(124): warning C4251: 'CInput::m_UseKeyList': class 'std::list<unsigned char,std::allocator<_Ty>>'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=unsigned char
          ]
  e:\lecture\26th\directx\gameengine\engine\include\input.h(124): note: 'std::list<unsigned char,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=unsigned char
          ]
e:\lecture\26th\directx\gameengine\engine\include\input.h(137): warning C4251: 'CInput::m_tMouseInfo': struct '_tagKeyInfo'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  e:\lecture\26th\directx\gameengine\engine\include\input.h(29): note: '_tagKeyInfo' 선언을 참조하십시오.
  코드를 생성하고 있습니다...
  컴파일하고 있습니다...
  TestPixelCollision.cpp
e:\lecture\26th\directx\gameengine\engine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.14393.0\um\directxmath.h(451): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
e:\lecture\26th\directx\gameengine\engine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring(3997): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
e:\lecture\26th\directx\gameengine\engine\include\component\scenecomponent.h(15): warning C4251: 'CSceneComponent::m_vecChild': class 'std::vector<CSceneComponent *,std::allocator<_Ty>>'에서는 class 'CSceneComponent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CSceneComponent *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\scenecomponent.h(15): note: 'std::vector<CSceneComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CSceneComponent *
          ]
e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(19): warning C4251: 'CGameObject::m_vecObjComponent': class 'std::vector<CObjectComponent *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CObjectComponent *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(19): note: 'std::vector<CObjectComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CObjectComponent *
          ]
e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(20): warning C4251: 'CGameObject::m_vecChild': class 'std::vector<CGameObject *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(20): note: 'std::vector<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(22): warning C4251: 'CGameObject::m_BeginList': class 'std::list<CComponent *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CComponent *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(22): note: 'std::list<CComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CComponent *
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\transform.h(16): warning C4251: 'CTransform::m_vecChild': class 'std::vector<CTransform *,std::allocator<_Ty>>'에서는 class 'CTransform'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CTransform *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\transform.h(16): note: 'std::vector<CTransform *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CTransform *
          ]
e:\lecture\26th\directx\gameengine\engine\include\scene\scene.h(26): warning C4251: 'CScene::m_ObjList': class 'std::list<CGameObject *,std::allocator<_Ty>>'에서는 class 'CScene'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\scene\scene.h(26): note: 'std::list<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
e:\lecture\26th\directx\gameengine\engine\include\scene\scene.h(27): warning C4251: 'CScene::m_BeginList': class 'std::list<CGameObject *,std::allocator<_Ty>>'에서는 class 'CScene'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\scene\scene.h(26): note: 'std::list<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(8): warning C4251: 'CResourceManager::m_mapMesh': class 'std::unordered_map<::size_t,CMesh *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CMesh *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(8): note: 'std::unordered_map<::size_t,CMesh *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CMesh *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(9): warning C4251: 'CResourceManager::m_mapTexture': class 'std::unordered_map<::size_t,CTexture *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CTexture *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(9): note: 'std::unordered_map<::size_t,CTexture *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CTexture *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(10): warning C4251: 'CResourceManager::m_mapMaterial': class 'std::unordered_map<::size_t,CMaterial *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CMaterial *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(10): note: 'std::unordered_map<::size_t,CMaterial *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CMaterial *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(11): warning C4251: 'CResourceManager::m_mapSampler': class 'std::unordered_map<::size_t,ID3D11SamplerState *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=ID3D11SamplerState *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(11): note: 'std::unordered_map<::size_t,ID3D11SamplerState *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=ID3D11SamplerState *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(12): warning C4251: 'CResourceManager::m_mapRenderState': class 'std::unordered_map<::size_t,CRenderState *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CRenderState *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(12): note: 'std::unordered_map<::size_t,CRenderState *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CRenderState *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(13): warning C4251: 'CResourceManager::m_mapAnim2DSequence': class 'std::unordered_map<::size_t,CAnimation2DSequence *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CAnimation2DSequence *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(13): note: 'std::unordered_map<::size_t,CAnimation2DSequence *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CAnimation2DSequence *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): warning C4251: 'CResourceManager::m_DefaultMeshList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(15): warning C4251: 'CResourceManager::m_DefaultTextureList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(16): warning C4251: 'CResourceManager::m_DefaultRenderStateList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(17): warning C4251: 'CResourceManager::m_DefaultMaterialList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(18): warning C4251: 'CResourceManager::m_MaterialIter': class 'std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<const _Kty,_Ty>>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CMaterial *
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list(571): note: 'std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<const _Kty,_Ty>>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CMaterial *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\mesh.h(22): warning C4251: 'CMesh::m_vecMeshContainer': class 'std::vector<PMeshContainer,std::allocator<_Ty>>'에서는 class 'CMesh'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PMeshContainer
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\mesh.h(22): note: 'std::vector<PMeshContainer,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PMeshContainer
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(8): warning C4251: 'CShaderManager::m_mapShader': class 'std::unordered_map<::size_t,CShader *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CShader *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(8): note: 'std::unordered_map<::size_t,CShader *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CShader *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(9): warning C4251: 'CShaderManager::m_mapInputLayout': class 'std::unordered_map<::size_t,ID3D11InputLayout *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=ID3D11InputLayout *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(9): note: 'std::unordered_map<::size_t,ID3D11InputLayout *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=ID3D11InputLayout *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(10): warning C4251: 'CShaderManager::m_mapCBuffer': class 'std::unordered_map<::size_t,PCBuffer,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=PCBuffer
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(10): note: 'std::unordered_map<::size_t,PCBuffer,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=PCBuffer
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(11): warning C4251: 'CShaderManager::m_vecInputDesc': class 'std::vector<D3D11_INPUT_ELEMENT_DESC,std::allocator<_Ty>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=D3D11_INPUT_ELEMENT_DESC
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(11): note: 'std::vector<D3D11_INPUT_ELEMENT_DESC,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=D3D11_INPUT_ELEMENT_DESC
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\material.h(44): warning C4251: 'CMaterial::m_vecContainer': class 'std::vector<PMaterialContainer,std::allocator<_Ty>>'에서는 class 'CMaterial'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PMaterialContainer
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\material.h(44): note: 'std::vector<PMaterialContainer,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PMaterialContainer
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\material.h(48): warning C4251: 'CMaterial::m_mapCBuffer': class 'std::unordered_map<::size_t,PCBufferNode,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CMaterial'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=PCBufferNode
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\material.h(48): note: 'std::unordered_map<::size_t,PCBufferNode,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=PCBufferNode
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(23): warning C4251: 'CColliderBase::m_vecBlockCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(24): warning C4251: 'CColliderBase::m_vecBeginOverlapCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(25): warning C4251: 'CColliderBase::m_vecEndOverlapCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(28): warning C4251: 'CColliderBase::m_CurrentFrameCollision': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(28): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(29): warning C4251: 'CColliderBase::m_CollisionList': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(28): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(30): warning C4251: 'CColliderBase::m_vecSectionIndex': class 'std::vector<unsigned int,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=unsigned int
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(30): note: 'std::vector<unsigned int,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=unsigned int
          ]
e:\lecture\26th\directx\gameengine\engine\include\input.h(120): warning C4251: 'CInput::m_tKeyInfo': struct '_tagKeyInfo'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  e:\lecture\26th\directx\gameengine\engine\include\input.h(29): note: '_tagKeyInfo' 선언을 참조하십시오.
e:\lecture\26th\directx\gameengine\engine\include\input.h(122): warning C4251: 'CInput::m_mapAxis': class 'std::unordered_map<::size_t,PKeyAxis,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=PKeyAxis
          ]
  e:\lecture\26th\directx\gameengine\engine\include\input.h(122): note: 'std::unordered_map<::size_t,PKeyAxis,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=PKeyAxis
          ]
e:\lecture\26th\directx\gameengine\engine\include\input.h(123): warning C4251: 'CInput::m_mapAction': class 'std::unordered_map<::size_t,PKeyAction,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=PKeyAction
          ]
  e:\lecture\26th\directx\gameengine\engine\include\input.h(123): note: 'std::unordered_map<::size_t,PKeyAction,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=PKeyAction
          ]
e:\lecture\26th\directx\gameengine\engine\include\input.h(124): warning C4251: 'CInput::m_UseKeyList': class 'std::list<unsigned char,std::allocator<_Ty>>'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=unsigned char
          ]
  e:\lecture\26th\directx\gameengine\engine\include\input.h(124): note: 'std::list<unsigned char,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=unsigned char
          ]
e:\lecture\26th\directx\gameengine\engine\include\input.h(137): warning C4251: 'CInput::m_tMouseInfo': struct '_tagKeyInfo'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  e:\lecture\26th\directx\gameengine\engine\include\input.h(29): note: '_tagKeyInfo' 선언을 참조하십시오.
  TestObject.cpp
e:\lecture\26th\directx\gameengine\engine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.14393.0\um\directxmath.h(451): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
e:\lecture\26th\directx\gameengine\engine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring(3997): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
e:\lecture\26th\directx\gameengine\engine\include\component\scenecomponent.h(15): warning C4251: 'CSceneComponent::m_vecChild': class 'std::vector<CSceneComponent *,std::allocator<_Ty>>'에서는 class 'CSceneComponent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CSceneComponent *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\scenecomponent.h(15): note: 'std::vector<CSceneComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CSceneComponent *
          ]
e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(19): warning C4251: 'CGameObject::m_vecObjComponent': class 'std::vector<CObjectComponent *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CObjectComponent *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(19): note: 'std::vector<CObjectComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CObjectComponent *
          ]
e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(20): warning C4251: 'CGameObject::m_vecChild': class 'std::vector<CGameObject *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(20): note: 'std::vector<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(22): warning C4251: 'CGameObject::m_BeginList': class 'std::list<CComponent *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CComponent *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(22): note: 'std::list<CComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CComponent *
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\transform.h(16): warning C4251: 'CTransform::m_vecChild': class 'std::vector<CTransform *,std::allocator<_Ty>>'에서는 class 'CTransform'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CTransform *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\transform.h(16): note: 'std::vector<CTransform *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CTransform *
          ]
e:\lecture\26th\directx\gameengine\engine\include\scene\scene.h(26): warning C4251: 'CScene::m_ObjList': class 'std::list<CGameObject *,std::allocator<_Ty>>'에서는 class 'CScene'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\scene\scene.h(26): note: 'std::list<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
e:\lecture\26th\directx\gameengine\engine\include\scene\scene.h(27): warning C4251: 'CScene::m_BeginList': class 'std::list<CGameObject *,std::allocator<_Ty>>'에서는 class 'CScene'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\scene\scene.h(26): note: 'std::list<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(8): warning C4251: 'CResourceManager::m_mapMesh': class 'std::unordered_map<::size_t,CMesh *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CMesh *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(8): note: 'std::unordered_map<::size_t,CMesh *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CMesh *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(9): warning C4251: 'CResourceManager::m_mapTexture': class 'std::unordered_map<::size_t,CTexture *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CTexture *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(9): note: 'std::unordered_map<::size_t,CTexture *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CTexture *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(10): warning C4251: 'CResourceManager::m_mapMaterial': class 'std::unordered_map<::size_t,CMaterial *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CMaterial *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(10): note: 'std::unordered_map<::size_t,CMaterial *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CMaterial *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(11): warning C4251: 'CResourceManager::m_mapSampler': class 'std::unordered_map<::size_t,ID3D11SamplerState *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=ID3D11SamplerState *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(11): note: 'std::unordered_map<::size_t,ID3D11SamplerState *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=ID3D11SamplerState *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(12): warning C4251: 'CResourceManager::m_mapRenderState': class 'std::unordered_map<::size_t,CRenderState *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CRenderState *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(12): note: 'std::unordered_map<::size_t,CRenderState *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CRenderState *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(13): warning C4251: 'CResourceManager::m_mapAnim2DSequence': class 'std::unordered_map<::size_t,CAnimation2DSequence *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CAnimation2DSequence *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(13): note: 'std::unordered_map<::size_t,CAnimation2DSequence *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CAnimation2DSequence *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): warning C4251: 'CResourceManager::m_DefaultMeshList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(15): warning C4251: 'CResourceManager::m_DefaultTextureList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(16): warning C4251: 'CResourceManager::m_DefaultRenderStateList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(17): warning C4251: 'CResourceManager::m_DefaultMaterialList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(18): warning C4251: 'CResourceManager::m_MaterialIter': class 'std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<const _Kty,_Ty>>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CMaterial *
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list(571): note: 'std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<const _Kty,_Ty>>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CMaterial *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\mesh.h(22): warning C4251: 'CMesh::m_vecMeshContainer': class 'std::vector<PMeshContainer,std::allocator<_Ty>>'에서는 class 'CMesh'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PMeshContainer
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\mesh.h(22): note: 'std::vector<PMeshContainer,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PMeshContainer
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(8): warning C4251: 'CShaderManager::m_mapShader': class 'std::unordered_map<::size_t,CShader *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CShader *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(8): note: 'std::unordered_map<::size_t,CShader *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CShader *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(9): warning C4251: 'CShaderManager::m_mapInputLayout': class 'std::unordered_map<::size_t,ID3D11InputLayout *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=ID3D11InputLayout *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(9): note: 'std::unordered_map<::size_t,ID3D11InputLayout *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=ID3D11InputLayout *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(10): warning C4251: 'CShaderManager::m_mapCBuffer': class 'std::unordered_map<::size_t,PCBuffer,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=PCBuffer
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(10): note: 'std::unordered_map<::size_t,PCBuffer,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=PCBuffer
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(11): warning C4251: 'CShaderManager::m_vecInputDesc': class 'std::vector<D3D11_INPUT_ELEMENT_DESC,std::allocator<_Ty>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=D3D11_INPUT_ELEMENT_DESC
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(11): note: 'std::vector<D3D11_INPUT_ELEMENT_DESC,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=D3D11_INPUT_ELEMENT_DESC
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\material.h(44): warning C4251: 'CMaterial::m_vecContainer': class 'std::vector<PMaterialContainer,std::allocator<_Ty>>'에서는 class 'CMaterial'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PMaterialContainer
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\material.h(44): note: 'std::vector<PMaterialContainer,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PMaterialContainer
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\material.h(48): warning C4251: 'CMaterial::m_mapCBuffer': class 'std::unordered_map<::size_t,PCBufferNode,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CMaterial'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=PCBufferNode
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\material.h(48): note: 'std::unordered_map<::size_t,PCBufferNode,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=PCBufferNode
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(23): warning C4251: 'CColliderBase::m_vecBlockCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(24): warning C4251: 'CColliderBase::m_vecBeginOverlapCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(25): warning C4251: 'CColliderBase::m_vecEndOverlapCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(28): warning C4251: 'CColliderBase::m_CurrentFrameCollision': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(28): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(29): warning C4251: 'CColliderBase::m_CollisionList': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(28): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(30): warning C4251: 'CColliderBase::m_vecSectionIndex': class 'std::vector<unsigned int,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=unsigned int
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(30): note: 'std::vector<unsigned int,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=unsigned int
          ]
e:\lecture\26th\directx\gameengine\engine\include\input.h(120): warning C4251: 'CInput::m_tKeyInfo': struct '_tagKeyInfo'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  e:\lecture\26th\directx\gameengine\engine\include\input.h(29): note: '_tagKeyInfo' 선언을 참조하십시오.
e:\lecture\26th\directx\gameengine\engine\include\input.h(122): warning C4251: 'CInput::m_mapAxis': class 'std::unordered_map<::size_t,PKeyAxis,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=PKeyAxis
          ]
  e:\lecture\26th\directx\gameengine\engine\include\input.h(122): note: 'std::unordered_map<::size_t,PKeyAxis,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=PKeyAxis
          ]
e:\lecture\26th\directx\gameengine\engine\include\input.h(123): warning C4251: 'CInput::m_mapAction': class 'std::unordered_map<::size_t,PKeyAction,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=PKeyAction
          ]
  e:\lecture\26th\directx\gameengine\engine\include\input.h(123): note: 'std::unordered_map<::size_t,PKeyAction,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=PKeyAction
          ]
e:\lecture\26th\directx\gameengine\engine\include\input.h(124): warning C4251: 'CInput::m_UseKeyList': class 'std::list<unsigned char,std::allocator<_Ty>>'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=unsigned char
          ]
  e:\lecture\26th\directx\gameengine\engine\include\input.h(124): note: 'std::list<unsigned char,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=unsigned char
          ]
e:\lecture\26th\directx\gameengine\engine\include\input.h(137): warning C4251: 'CInput::m_tMouseInfo': struct '_tagKeyInfo'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  e:\lecture\26th\directx\gameengine\engine\include\input.h(29): note: '_tagKeyInfo' 선언을 참조하십시오.
e:\lecture\26th\directx\gameengine\engine\include\resource\animation2dsequence.h(41): warning C4251: 'CAnimation2DSequence::m_vecTexture': class 'std::vector<CTexture *,std::allocator<_Ty>>'에서는 class 'CAnimation2DSequence'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CTexture *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\animation2dsequence.h(41): note: 'std::vector<CTexture *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CTexture *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\animation2dsequence.h(51): warning C4251: 'CAnimation2DSequence::m_NotifyList': class 'std::list<PAnim2DNotify,std::allocator<_Ty>>'에서는 class 'CAnimation2DSequence'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PAnim2DNotify
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\animation2dsequence.h(51): note: 'std::list<PAnim2DNotify,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PAnim2DNotify
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\animation2dsequence.h(52): warning C4251: 'CAnimation2DSequence::m_vecFrameInfo': class 'std::vector<Animation2DFrameInfo,std::allocator<_Ty>>'에서는 class 'CAnimation2DSequence'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=Animation2DFrameInfo
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\animation2dsequence.h(52): note: 'std::vector<Animation2DFrameInfo,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=Animation2DFrameInfo
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\animation2dsequence.h(55): warning C4251: 'CAnimation2DSequence::m_strReturnSequence': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CAnimation2DSequence'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring(3997): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
e:\lecture\26th\directx\gameengine\engine\include\component\animation2d.h(35): warning C4251: 'CAnimation2D::m_mapAnimSequence': class 'std::unordered_map<::size_t,CAnimation2DSequence *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CAnimation2D'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CAnimation2DSequence *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(13): note: 'std::unordered_map<::size_t,CAnimation2DSequence *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CAnimation2DSequence *
          ]
e:\lecture\26th\directx\gameengine\engine\include\scheduler.h(7): warning C4251: '_tagScheduleInfo::strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 struct '_tagScheduleInfo'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring(3997): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
e:\lecture\26th\directx\gameengine\engine\include\scheduler.h(11): warning C4251: '_tagScheduleInfo::func': class 'std::function<void (void)>'에서는 struct '_tagScheduleInfo'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  e:\lecture\26th\directx\gameengine\engine\include\scheduler.h(11): note: 'std::function<void (void)>' 선언을 참조하십시오.
e:\lecture\26th\directx\gameengine\engine\include\scheduler.h(24): warning C4251: 'CScheduler::m_ScheduleList': class 'std::list<_tagScheduleInfo *,std::allocator<_Ty>>'에서는 class 'CScheduler'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=_tagScheduleInfo *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\scheduler.h(24): note: 'std::list<_tagScheduleInfo *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=_tagScheduleInfo *
          ]
  TestButton.cpp
e:\lecture\26th\directx\gameengine\engine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.14393.0\um\directxmath.h(451): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
e:\lecture\26th\directx\gameengine\engine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring(3997): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
e:\lecture\26th\directx\gameengine\engine\include\component\scenecomponent.h(15): warning C4251: 'CSceneComponent::m_vecChild': class 'std::vector<CSceneComponent *,std::allocator<_Ty>>'에서는 class 'CSceneComponent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CSceneComponent *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\scenecomponent.h(15): note: 'std::vector<CSceneComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CSceneComponent *
          ]
e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(19): warning C4251: 'CGameObject::m_vecObjComponent': class 'std::vector<CObjectComponent *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CObjectComponent *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(19): note: 'std::vector<CObjectComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CObjectComponent *
          ]
e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(20): warning C4251: 'CGameObject::m_vecChild': class 'std::vector<CGameObject *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(20): note: 'std::vector<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(22): warning C4251: 'CGameObject::m_BeginList': class 'std::list<CComponent *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CComponent *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(22): note: 'std::list<CComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CComponent *
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\uibutton.h(31): warning C4251: 'CUIButton::m_Event': class 'std::function<void (float)>'에서는 class 'CUIButton'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  e:\lecture\26th\directx\gameengine\engine\include\component\uibutton.h(31): note: 'std::function<void (float)>' 선언을 참조하십시오.
e:\lecture\26th\directx\gameengine\engine\include\component\transform.h(16): warning C4251: 'CTransform::m_vecChild': class 'std::vector<CTransform *,std::allocator<_Ty>>'에서는 class 'CTransform'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CTransform *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\transform.h(16): note: 'std::vector<CTransform *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CTransform *
          ]
e:\lecture\26th\directx\gameengine\engine\include\scene\scene.h(26): warning C4251: 'CScene::m_ObjList': class 'std::list<CGameObject *,std::allocator<_Ty>>'에서는 class 'CScene'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\scene\scene.h(26): note: 'std::list<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
e:\lecture\26th\directx\gameengine\engine\include\scene\scene.h(27): warning C4251: 'CScene::m_BeginList': class 'std::list<CGameObject *,std::allocator<_Ty>>'에서는 class 'CScene'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\scene\scene.h(26): note: 'std::list<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(8): warning C4251: 'CResourceManager::m_mapMesh': class 'std::unordered_map<::size_t,CMesh *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CMesh *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(8): note: 'std::unordered_map<::size_t,CMesh *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CMesh *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(9): warning C4251: 'CResourceManager::m_mapTexture': class 'std::unordered_map<::size_t,CTexture *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CTexture *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(9): note: 'std::unordered_map<::size_t,CTexture *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CTexture *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(10): warning C4251: 'CResourceManager::m_mapMaterial': class 'std::unordered_map<::size_t,CMaterial *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CMaterial *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(10): note: 'std::unordered_map<::size_t,CMaterial *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CMaterial *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(11): warning C4251: 'CResourceManager::m_mapSampler': class 'std::unordered_map<::size_t,ID3D11SamplerState *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=ID3D11SamplerState *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(11): note: 'std::unordered_map<::size_t,ID3D11SamplerState *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=ID3D11SamplerState *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(12): warning C4251: 'CResourceManager::m_mapRenderState': class 'std::unordered_map<::size_t,CRenderState *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CRenderState *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(12): note: 'std::unordered_map<::size_t,CRenderState *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CRenderState *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(13): warning C4251: 'CResourceManager::m_mapAnim2DSequence': class 'std::unordered_map<::size_t,CAnimation2DSequence *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CAnimation2DSequence *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(13): note: 'std::unordered_map<::size_t,CAnimation2DSequence *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CAnimation2DSequence *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): warning C4251: 'CResourceManager::m_DefaultMeshList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(15): warning C4251: 'CResourceManager::m_DefaultTextureList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(16): warning C4251: 'CResourceManager::m_DefaultRenderStateList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(17): warning C4251: 'CResourceManager::m_DefaultMaterialList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(18): warning C4251: 'CResourceManager::m_MaterialIter': class 'std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<const _Kty,_Ty>>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CMaterial *
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list(571): note: 'std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<const _Kty,_Ty>>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CMaterial *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\mesh.h(22): warning C4251: 'CMesh::m_vecMeshContainer': class 'std::vector<PMeshContainer,std::allocator<_Ty>>'에서는 class 'CMesh'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PMeshContainer
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\mesh.h(22): note: 'std::vector<PMeshContainer,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PMeshContainer
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(8): warning C4251: 'CShaderManager::m_mapShader': class 'std::unordered_map<::size_t,CShader *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CShader *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(8): note: 'std::unordered_map<::size_t,CShader *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CShader *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(9): warning C4251: 'CShaderManager::m_mapInputLayout': class 'std::unordered_map<::size_t,ID3D11InputLayout *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=ID3D11InputLayout *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(9): note: 'std::unordered_map<::size_t,ID3D11InputLayout *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=ID3D11InputLayout *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(10): warning C4251: 'CShaderManager::m_mapCBuffer': class 'std::unordered_map<::size_t,PCBuffer,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=PCBuffer
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(10): note: 'std::unordered_map<::size_t,PCBuffer,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=PCBuffer
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(11): warning C4251: 'CShaderManager::m_vecInputDesc': class 'std::vector<D3D11_INPUT_ELEMENT_DESC,std::allocator<_Ty>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=D3D11_INPUT_ELEMENT_DESC
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(11): note: 'std::vector<D3D11_INPUT_ELEMENT_DESC,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=D3D11_INPUT_ELEMENT_DESC
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\material.h(44): warning C4251: 'CMaterial::m_vecContainer': class 'std::vector<PMaterialContainer,std::allocator<_Ty>>'에서는 class 'CMaterial'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PMaterialContainer
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\material.h(44): note: 'std::vector<PMaterialContainer,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PMaterialContainer
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\material.h(48): warning C4251: 'CMaterial::m_mapCBuffer': class 'std::unordered_map<::size_t,PCBufferNode,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CMaterial'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=PCBufferNode
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\material.h(48): note: 'std::unordered_map<::size_t,PCBufferNode,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=PCBufferNode
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(23): warning C4251: 'CColliderBase::m_vecBlockCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(24): warning C4251: 'CColliderBase::m_vecBeginOverlapCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(25): warning C4251: 'CColliderBase::m_vecEndOverlapCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(28): warning C4251: 'CColliderBase::m_CurrentFrameCollision': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(28): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(29): warning C4251: 'CColliderBase::m_CollisionList': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(28): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(30): warning C4251: 'CColliderBase::m_vecSectionIndex': class 'std::vector<unsigned int,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=unsigned int
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(30): note: 'std::vector<unsigned int,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=unsigned int
          ]
  TestBar.cpp
e:\lecture\26th\directx\gameengine\engine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.14393.0\um\directxmath.h(451): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
e:\lecture\26th\directx\gameengine\engine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring(3997): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
e:\lecture\26th\directx\gameengine\engine\include\component\scenecomponent.h(15): warning C4251: 'CSceneComponent::m_vecChild': class 'std::vector<CSceneComponent *,std::allocator<_Ty>>'에서는 class 'CSceneComponent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CSceneComponent *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\scenecomponent.h(15): note: 'std::vector<CSceneComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CSceneComponent *
          ]
e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(19): warning C4251: 'CGameObject::m_vecObjComponent': class 'std::vector<CObjectComponent *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CObjectComponent *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(19): note: 'std::vector<CObjectComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CObjectComponent *
          ]
e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(20): warning C4251: 'CGameObject::m_vecChild': class 'std::vector<CGameObject *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(20): note: 'std::vector<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(22): warning C4251: 'CGameObject::m_BeginList': class 'std::list<CComponent *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CComponent *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(22): note: 'std::list<CComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CComponent *
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\transform.h(16): warning C4251: 'CTransform::m_vecChild': class 'std::vector<CTransform *,std::allocator<_Ty>>'에서는 class 'CTransform'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CTransform *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\transform.h(16): note: 'std::vector<CTransform *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CTransform *
          ]
e:\lecture\26th\directx\gameengine\engine\include\scene\scene.h(26): warning C4251: 'CScene::m_ObjList': class 'std::list<CGameObject *,std::allocator<_Ty>>'에서는 class 'CScene'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\scene\scene.h(26): note: 'std::list<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
e:\lecture\26th\directx\gameengine\engine\include\scene\scene.h(27): warning C4251: 'CScene::m_BeginList': class 'std::list<CGameObject *,std::allocator<_Ty>>'에서는 class 'CScene'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\scene\scene.h(26): note: 'std::list<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(8): warning C4251: 'CResourceManager::m_mapMesh': class 'std::unordered_map<::size_t,CMesh *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CMesh *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(8): note: 'std::unordered_map<::size_t,CMesh *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CMesh *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(9): warning C4251: 'CResourceManager::m_mapTexture': class 'std::unordered_map<::size_t,CTexture *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CTexture *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(9): note: 'std::unordered_map<::size_t,CTexture *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CTexture *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(10): warning C4251: 'CResourceManager::m_mapMaterial': class 'std::unordered_map<::size_t,CMaterial *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CMaterial *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(10): note: 'std::unordered_map<::size_t,CMaterial *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CMaterial *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(11): warning C4251: 'CResourceManager::m_mapSampler': class 'std::unordered_map<::size_t,ID3D11SamplerState *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=ID3D11SamplerState *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(11): note: 'std::unordered_map<::size_t,ID3D11SamplerState *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=ID3D11SamplerState *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(12): warning C4251: 'CResourceManager::m_mapRenderState': class 'std::unordered_map<::size_t,CRenderState *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CRenderState *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(12): note: 'std::unordered_map<::size_t,CRenderState *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CRenderState *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(13): warning C4251: 'CResourceManager::m_mapAnim2DSequence': class 'std::unordered_map<::size_t,CAnimation2DSequence *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CAnimation2DSequence *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(13): note: 'std::unordered_map<::size_t,CAnimation2DSequence *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CAnimation2DSequence *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): warning C4251: 'CResourceManager::m_DefaultMeshList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(15): warning C4251: 'CResourceManager::m_DefaultTextureList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(16): warning C4251: 'CResourceManager::m_DefaultRenderStateList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(17): warning C4251: 'CResourceManager::m_DefaultMaterialList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(18): warning C4251: 'CResourceManager::m_MaterialIter': class 'std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<const _Kty,_Ty>>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CMaterial *
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list(571): note: 'std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<const _Kty,_Ty>>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CMaterial *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\mesh.h(22): warning C4251: 'CMesh::m_vecMeshContainer': class 'std::vector<PMeshContainer,std::allocator<_Ty>>'에서는 class 'CMesh'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PMeshContainer
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\mesh.h(22): note: 'std::vector<PMeshContainer,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PMeshContainer
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(8): warning C4251: 'CShaderManager::m_mapShader': class 'std::unordered_map<::size_t,CShader *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CShader *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(8): note: 'std::unordered_map<::size_t,CShader *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CShader *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(9): warning C4251: 'CShaderManager::m_mapInputLayout': class 'std::unordered_map<::size_t,ID3D11InputLayout *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=ID3D11InputLayout *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(9): note: 'std::unordered_map<::size_t,ID3D11InputLayout *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=ID3D11InputLayout *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(10): warning C4251: 'CShaderManager::m_mapCBuffer': class 'std::unordered_map<::size_t,PCBuffer,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=PCBuffer
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(10): note: 'std::unordered_map<::size_t,PCBuffer,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=PCBuffer
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(11): warning C4251: 'CShaderManager::m_vecInputDesc': class 'std::vector<D3D11_INPUT_ELEMENT_DESC,std::allocator<_Ty>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=D3D11_INPUT_ELEMENT_DESC
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(11): note: 'std::vector<D3D11_INPUT_ELEMENT_DESC,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=D3D11_INPUT_ELEMENT_DESC
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\material.h(44): warning C4251: 'CMaterial::m_vecContainer': class 'std::vector<PMaterialContainer,std::allocator<_Ty>>'에서는 class 'CMaterial'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PMaterialContainer
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\material.h(44): note: 'std::vector<PMaterialContainer,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PMaterialContainer
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\material.h(48): warning C4251: 'CMaterial::m_mapCBuffer': class 'std::unordered_map<::size_t,PCBufferNode,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CMaterial'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=PCBufferNode
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\material.h(48): note: 'std::unordered_map<::size_t,PCBufferNode,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=PCBufferNode
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(23): warning C4251: 'CColliderBase::m_vecBlockCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(24): warning C4251: 'CColliderBase::m_vecBeginOverlapCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(25): warning C4251: 'CColliderBase::m_vecEndOverlapCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(28): warning C4251: 'CColliderBase::m_CurrentFrameCollision': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(28): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(29): warning C4251: 'CColliderBase::m_CollisionList': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(28): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(30): warning C4251: 'CColliderBase::m_vecSectionIndex': class 'std::vector<unsigned int,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=unsigned int
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(30): note: 'std::vector<unsigned int,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=unsigned int
          ]
  StartButton.cpp
e:\lecture\26th\directx\gameengine\engine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.14393.0\um\directxmath.h(451): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
e:\lecture\26th\directx\gameengine\engine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring(3997): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
e:\lecture\26th\directx\gameengine\engine\include\component\scenecomponent.h(15): warning C4251: 'CSceneComponent::m_vecChild': class 'std::vector<CSceneComponent *,std::allocator<_Ty>>'에서는 class 'CSceneComponent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CSceneComponent *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\scenecomponent.h(15): note: 'std::vector<CSceneComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CSceneComponent *
          ]
e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(19): warning C4251: 'CGameObject::m_vecObjComponent': class 'std::vector<CObjectComponent *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CObjectComponent *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(19): note: 'std::vector<CObjectComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CObjectComponent *
          ]
e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(20): warning C4251: 'CGameObject::m_vecChild': class 'std::vector<CGameObject *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(20): note: 'std::vector<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(22): warning C4251: 'CGameObject::m_BeginList': class 'std::list<CComponent *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CComponent *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(22): note: 'std::list<CComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CComponent *
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\uibutton.h(31): warning C4251: 'CUIButton::m_Event': class 'std::function<void (float)>'에서는 class 'CUIButton'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  e:\lecture\26th\directx\gameengine\engine\include\component\uibutton.h(31): note: 'std::function<void (float)>' 선언을 참조하십시오.
e:\lecture\26th\directx\gameengine\engine\include\component\transform.h(16): warning C4251: 'CTransform::m_vecChild': class 'std::vector<CTransform *,std::allocator<_Ty>>'에서는 class 'CTransform'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CTransform *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\transform.h(16): note: 'std::vector<CTransform *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CTransform *
          ]
e:\lecture\26th\directx\gameengine\engine\include\scene\scene.h(26): warning C4251: 'CScene::m_ObjList': class 'std::list<CGameObject *,std::allocator<_Ty>>'에서는 class 'CScene'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\scene\scene.h(26): note: 'std::list<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
e:\lecture\26th\directx\gameengine\engine\include\scene\scene.h(27): warning C4251: 'CScene::m_BeginList': class 'std::list<CGameObject *,std::allocator<_Ty>>'에서는 class 'CScene'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\scene\scene.h(26): note: 'std::list<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(8): warning C4251: 'CResourceManager::m_mapMesh': class 'std::unordered_map<::size_t,CMesh *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CMesh *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(8): note: 'std::unordered_map<::size_t,CMesh *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CMesh *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(9): warning C4251: 'CResourceManager::m_mapTexture': class 'std::unordered_map<::size_t,CTexture *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CTexture *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(9): note: 'std::unordered_map<::size_t,CTexture *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CTexture *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(10): warning C4251: 'CResourceManager::m_mapMaterial': class 'std::unordered_map<::size_t,CMaterial *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CMaterial *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(10): note: 'std::unordered_map<::size_t,CMaterial *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CMaterial *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(11): warning C4251: 'CResourceManager::m_mapSampler': class 'std::unordered_map<::size_t,ID3D11SamplerState *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=ID3D11SamplerState *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(11): note: 'std::unordered_map<::size_t,ID3D11SamplerState *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=ID3D11SamplerState *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(12): warning C4251: 'CResourceManager::m_mapRenderState': class 'std::unordered_map<::size_t,CRenderState *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CRenderState *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(12): note: 'std::unordered_map<::size_t,CRenderState *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CRenderState *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(13): warning C4251: 'CResourceManager::m_mapAnim2DSequence': class 'std::unordered_map<::size_t,CAnimation2DSequence *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CAnimation2DSequence *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(13): note: 'std::unordered_map<::size_t,CAnimation2DSequence *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CAnimation2DSequence *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): warning C4251: 'CResourceManager::m_DefaultMeshList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(15): warning C4251: 'CResourceManager::m_DefaultTextureList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(16): warning C4251: 'CResourceManager::m_DefaultRenderStateList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(17): warning C4251: 'CResourceManager::m_DefaultMaterialList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(18): warning C4251: 'CResourceManager::m_MaterialIter': class 'std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<const _Kty,_Ty>>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CMaterial *
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list(571): note: 'std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<const _Kty,_Ty>>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CMaterial *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\mesh.h(22): warning C4251: 'CMesh::m_vecMeshContainer': class 'std::vector<PMeshContainer,std::allocator<_Ty>>'에서는 class 'CMesh'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PMeshContainer
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\mesh.h(22): note: 'std::vector<PMeshContainer,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PMeshContainer
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(8): warning C4251: 'CShaderManager::m_mapShader': class 'std::unordered_map<::size_t,CShader *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CShader *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(8): note: 'std::unordered_map<::size_t,CShader *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CShader *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(9): warning C4251: 'CShaderManager::m_mapInputLayout': class 'std::unordered_map<::size_t,ID3D11InputLayout *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=ID3D11InputLayout *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(9): note: 'std::unordered_map<::size_t,ID3D11InputLayout *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=ID3D11InputLayout *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(10): warning C4251: 'CShaderManager::m_mapCBuffer': class 'std::unordered_map<::size_t,PCBuffer,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=PCBuffer
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(10): note: 'std::unordered_map<::size_t,PCBuffer,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=PCBuffer
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(11): warning C4251: 'CShaderManager::m_vecInputDesc': class 'std::vector<D3D11_INPUT_ELEMENT_DESC,std::allocator<_Ty>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=D3D11_INPUT_ELEMENT_DESC
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(11): note: 'std::vector<D3D11_INPUT_ELEMENT_DESC,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=D3D11_INPUT_ELEMENT_DESC
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\material.h(44): warning C4251: 'CMaterial::m_vecContainer': class 'std::vector<PMaterialContainer,std::allocator<_Ty>>'에서는 class 'CMaterial'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PMaterialContainer
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\material.h(44): note: 'std::vector<PMaterialContainer,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PMaterialContainer
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\material.h(48): warning C4251: 'CMaterial::m_mapCBuffer': class 'std::unordered_map<::size_t,PCBufferNode,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CMaterial'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=PCBufferNode
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\material.h(48): note: 'std::unordered_map<::size_t,PCBufferNode,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=PCBufferNode
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(23): warning C4251: 'CColliderBase::m_vecBlockCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(24): warning C4251: 'CColliderBase::m_vecBeginOverlapCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(25): warning C4251: 'CColliderBase::m_vecEndOverlapCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(28): warning C4251: 'CColliderBase::m_CurrentFrameCollision': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(28): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(29): warning C4251: 'CColliderBase::m_CollisionList': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(28): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(30): warning C4251: 'CColliderBase::m_vecSectionIndex': class 'std::vector<unsigned int,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=unsigned int
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(30): note: 'std::vector<unsigned int,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=unsigned int
          ]
e:\lecture\26th\directx\gameengine\engine\include\input.h(120): warning C4251: 'CInput::m_tKeyInfo': struct '_tagKeyInfo'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  e:\lecture\26th\directx\gameengine\engine\include\input.h(29): note: '_tagKeyInfo' 선언을 참조하십시오.
e:\lecture\26th\directx\gameengine\engine\include\input.h(122): warning C4251: 'CInput::m_mapAxis': class 'std::unordered_map<::size_t,PKeyAxis,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=PKeyAxis
          ]
  e:\lecture\26th\directx\gameengine\engine\include\input.h(122): note: 'std::unordered_map<::size_t,PKeyAxis,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=PKeyAxis
          ]
e:\lecture\26th\directx\gameengine\engine\include\input.h(123): warning C4251: 'CInput::m_mapAction': class 'std::unordered_map<::size_t,PKeyAction,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=PKeyAction
          ]
  e:\lecture\26th\directx\gameengine\engine\include\input.h(123): note: 'std::unordered_map<::size_t,PKeyAction,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=PKeyAction
          ]
e:\lecture\26th\directx\gameengine\engine\include\input.h(124): warning C4251: 'CInput::m_UseKeyList': class 'std::list<unsigned char,std::allocator<_Ty>>'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=unsigned char
          ]
  e:\lecture\26th\directx\gameengine\engine\include\input.h(124): note: 'std::list<unsigned char,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=unsigned char
          ]
e:\lecture\26th\directx\gameengine\engine\include\input.h(137): warning C4251: 'CInput::m_tMouseInfo': struct '_tagKeyInfo'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  e:\lecture\26th\directx\gameengine\engine\include\input.h(29): note: '_tagKeyInfo' 선언을 참조하십시오.
  Minion.cpp
e:\lecture\26th\directx\gameengine\engine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.14393.0\um\directxmath.h(451): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
e:\lecture\26th\directx\gameengine\engine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring(3997): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
e:\lecture\26th\directx\gameengine\engine\include\component\scenecomponent.h(15): warning C4251: 'CSceneComponent::m_vecChild': class 'std::vector<CSceneComponent *,std::allocator<_Ty>>'에서는 class 'CSceneComponent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CSceneComponent *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\scenecomponent.h(15): note: 'std::vector<CSceneComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CSceneComponent *
          ]
e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(19): warning C4251: 'CGameObject::m_vecObjComponent': class 'std::vector<CObjectComponent *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CObjectComponent *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(19): note: 'std::vector<CObjectComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CObjectComponent *
          ]
e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(20): warning C4251: 'CGameObject::m_vecChild': class 'std::vector<CGameObject *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(20): note: 'std::vector<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(22): warning C4251: 'CGameObject::m_BeginList': class 'std::list<CComponent *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CComponent *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(22): note: 'std::list<CComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CComponent *
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\transform.h(16): warning C4251: 'CTransform::m_vecChild': class 'std::vector<CTransform *,std::allocator<_Ty>>'에서는 class 'CTransform'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CTransform *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\transform.h(16): note: 'std::vector<CTransform *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CTransform *
          ]
e:\lecture\26th\directx\gameengine\engine\include\scene\scene.h(26): warning C4251: 'CScene::m_ObjList': class 'std::list<CGameObject *,std::allocator<_Ty>>'에서는 class 'CScene'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\scene\scene.h(26): note: 'std::list<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
e:\lecture\26th\directx\gameengine\engine\include\scene\scene.h(27): warning C4251: 'CScene::m_BeginList': class 'std::list<CGameObject *,std::allocator<_Ty>>'에서는 class 'CScene'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\scene\scene.h(26): note: 'std::list<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(8): warning C4251: 'CResourceManager::m_mapMesh': class 'std::unordered_map<::size_t,CMesh *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CMesh *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(8): note: 'std::unordered_map<::size_t,CMesh *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CMesh *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(9): warning C4251: 'CResourceManager::m_mapTexture': class 'std::unordered_map<::size_t,CTexture *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CTexture *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(9): note: 'std::unordered_map<::size_t,CTexture *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CTexture *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(10): warning C4251: 'CResourceManager::m_mapMaterial': class 'std::unordered_map<::size_t,CMaterial *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CMaterial *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(10): note: 'std::unordered_map<::size_t,CMaterial *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CMaterial *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(11): warning C4251: 'CResourceManager::m_mapSampler': class 'std::unordered_map<::size_t,ID3D11SamplerState *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=ID3D11SamplerState *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(11): note: 'std::unordered_map<::size_t,ID3D11SamplerState *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=ID3D11SamplerState *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(12): warning C4251: 'CResourceManager::m_mapRenderState': class 'std::unordered_map<::size_t,CRenderState *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CRenderState *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(12): note: 'std::unordered_map<::size_t,CRenderState *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CRenderState *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(13): warning C4251: 'CResourceManager::m_mapAnim2DSequence': class 'std::unordered_map<::size_t,CAnimation2DSequence *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CAnimation2DSequence *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(13): note: 'std::unordered_map<::size_t,CAnimation2DSequence *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CAnimation2DSequence *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): warning C4251: 'CResourceManager::m_DefaultMeshList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(15): warning C4251: 'CResourceManager::m_DefaultTextureList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(16): warning C4251: 'CResourceManager::m_DefaultRenderStateList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(17): warning C4251: 'CResourceManager::m_DefaultMaterialList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(18): warning C4251: 'CResourceManager::m_MaterialIter': class 'std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<const _Kty,_Ty>>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CMaterial *
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list(571): note: 'std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<const _Kty,_Ty>>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CMaterial *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\mesh.h(22): warning C4251: 'CMesh::m_vecMeshContainer': class 'std::vector<PMeshContainer,std::allocator<_Ty>>'에서는 class 'CMesh'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PMeshContainer
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\mesh.h(22): note: 'std::vector<PMeshContainer,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PMeshContainer
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(8): warning C4251: 'CShaderManager::m_mapShader': class 'std::unordered_map<::size_t,CShader *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CShader *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(8): note: 'std::unordered_map<::size_t,CShader *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CShader *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(9): warning C4251: 'CShaderManager::m_mapInputLayout': class 'std::unordered_map<::size_t,ID3D11InputLayout *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=ID3D11InputLayout *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(9): note: 'std::unordered_map<::size_t,ID3D11InputLayout *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=ID3D11InputLayout *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(10): warning C4251: 'CShaderManager::m_mapCBuffer': class 'std::unordered_map<::size_t,PCBuffer,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=PCBuffer
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(10): note: 'std::unordered_map<::size_t,PCBuffer,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=PCBuffer
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(11): warning C4251: 'CShaderManager::m_vecInputDesc': class 'std::vector<D3D11_INPUT_ELEMENT_DESC,std::allocator<_Ty>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=D3D11_INPUT_ELEMENT_DESC
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(11): note: 'std::vector<D3D11_INPUT_ELEMENT_DESC,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=D3D11_INPUT_ELEMENT_DESC
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\material.h(44): warning C4251: 'CMaterial::m_vecContainer': class 'std::vector<PMaterialContainer,std::allocator<_Ty>>'에서는 class 'CMaterial'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PMaterialContainer
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\material.h(44): note: 'std::vector<PMaterialContainer,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PMaterialContainer
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\material.h(48): warning C4251: 'CMaterial::m_mapCBuffer': class 'std::unordered_map<::size_t,PCBufferNode,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CMaterial'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=PCBufferNode
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\material.h(48): note: 'std::unordered_map<::size_t,PCBufferNode,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=PCBufferNode
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(23): warning C4251: 'CColliderBase::m_vecBlockCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(24): warning C4251: 'CColliderBase::m_vecBeginOverlapCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(25): warning C4251: 'CColliderBase::m_vecEndOverlapCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(28): warning C4251: 'CColliderBase::m_CurrentFrameCollision': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(28): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(29): warning C4251: 'CColliderBase::m_CollisionList': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(28): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(30): warning C4251: 'CColliderBase::m_vecSectionIndex': class 'std::vector<unsigned int,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=unsigned int
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(30): note: 'std::vector<unsigned int,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=unsigned int
          ]
e:\lecture\26th\directx\gameengine\engine\include\scheduler.h(7): warning C4251: '_tagScheduleInfo::strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 struct '_tagScheduleInfo'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring(3997): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
e:\lecture\26th\directx\gameengine\engine\include\scheduler.h(11): warning C4251: '_tagScheduleInfo::func': class 'std::function<void (void)>'에서는 struct '_tagScheduleInfo'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  e:\lecture\26th\directx\gameengine\engine\include\scheduler.h(11): note: 'std::function<void (void)>' 선언을 참조하십시오.
e:\lecture\26th\directx\gameengine\engine\include\scheduler.h(24): warning C4251: 'CScheduler::m_ScheduleList': class 'std::list<_tagScheduleInfo *,std::allocator<_Ty>>'에서는 class 'CScheduler'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=_tagScheduleInfo *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\scheduler.h(24): note: 'std::list<_tagScheduleInfo *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=_tagScheduleInfo *
          ]
  MainMap.cpp
e:\lecture\26th\directx\gameengine\engine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.14393.0\um\directxmath.h(451): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
e:\lecture\26th\directx\gameengine\engine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring(3997): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
e:\lecture\26th\directx\gameengine\engine\include\component\scenecomponent.h(15): warning C4251: 'CSceneComponent::m_vecChild': class 'std::vector<CSceneComponent *,std::allocator<_Ty>>'에서는 class 'CSceneComponent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CSceneComponent *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\scenecomponent.h(15): note: 'std::vector<CSceneComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CSceneComponent *
          ]
e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(19): warning C4251: 'CGameObject::m_vecObjComponent': class 'std::vector<CObjectComponent *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CObjectComponent *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(19): note: 'std::vector<CObjectComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CObjectComponent *
          ]
e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(20): warning C4251: 'CGameObject::m_vecChild': class 'std::vector<CGameObject *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(20): note: 'std::vector<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(22): warning C4251: 'CGameObject::m_BeginList': class 'std::list<CComponent *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CComponent *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(22): note: 'std::list<CComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CComponent *
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\transform.h(16): warning C4251: 'CTransform::m_vecChild': class 'std::vector<CTransform *,std::allocator<_Ty>>'에서는 class 'CTransform'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CTransform *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\transform.h(16): note: 'std::vector<CTransform *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CTransform *
          ]
e:\lecture\26th\directx\gameengine\engine\include\scene\scene.h(26): warning C4251: 'CScene::m_ObjList': class 'std::list<CGameObject *,std::allocator<_Ty>>'에서는 class 'CScene'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\scene\scene.h(26): note: 'std::list<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
e:\lecture\26th\directx\gameengine\engine\include\scene\scene.h(27): warning C4251: 'CScene::m_BeginList': class 'std::list<CGameObject *,std::allocator<_Ty>>'에서는 class 'CScene'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\scene\scene.h(26): note: 'std::list<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(8): warning C4251: 'CResourceManager::m_mapMesh': class 'std::unordered_map<::size_t,CMesh *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CMesh *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(8): note: 'std::unordered_map<::size_t,CMesh *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CMesh *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(9): warning C4251: 'CResourceManager::m_mapTexture': class 'std::unordered_map<::size_t,CTexture *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CTexture *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(9): note: 'std::unordered_map<::size_t,CTexture *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CTexture *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(10): warning C4251: 'CResourceManager::m_mapMaterial': class 'std::unordered_map<::size_t,CMaterial *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CMaterial *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(10): note: 'std::unordered_map<::size_t,CMaterial *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CMaterial *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(11): warning C4251: 'CResourceManager::m_mapSampler': class 'std::unordered_map<::size_t,ID3D11SamplerState *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=ID3D11SamplerState *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(11): note: 'std::unordered_map<::size_t,ID3D11SamplerState *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=ID3D11SamplerState *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(12): warning C4251: 'CResourceManager::m_mapRenderState': class 'std::unordered_map<::size_t,CRenderState *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CRenderState *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(12): note: 'std::unordered_map<::size_t,CRenderState *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CRenderState *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(13): warning C4251: 'CResourceManager::m_mapAnim2DSequence': class 'std::unordered_map<::size_t,CAnimation2DSequence *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CAnimation2DSequence *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(13): note: 'std::unordered_map<::size_t,CAnimation2DSequence *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CAnimation2DSequence *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): warning C4251: 'CResourceManager::m_DefaultMeshList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(15): warning C4251: 'CResourceManager::m_DefaultTextureList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(16): warning C4251: 'CResourceManager::m_DefaultRenderStateList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(17): warning C4251: 'CResourceManager::m_DefaultMaterialList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(18): warning C4251: 'CResourceManager::m_MaterialIter': class 'std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<const _Kty,_Ty>>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CMaterial *
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list(571): note: 'std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<const _Kty,_Ty>>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CMaterial *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\mesh.h(22): warning C4251: 'CMesh::m_vecMeshContainer': class 'std::vector<PMeshContainer,std::allocator<_Ty>>'에서는 class 'CMesh'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PMeshContainer
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\mesh.h(22): note: 'std::vector<PMeshContainer,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PMeshContainer
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(8): warning C4251: 'CShaderManager::m_mapShader': class 'std::unordered_map<::size_t,CShader *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CShader *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(8): note: 'std::unordered_map<::size_t,CShader *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CShader *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(9): warning C4251: 'CShaderManager::m_mapInputLayout': class 'std::unordered_map<::size_t,ID3D11InputLayout *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=ID3D11InputLayout *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(9): note: 'std::unordered_map<::size_t,ID3D11InputLayout *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=ID3D11InputLayout *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(10): warning C4251: 'CShaderManager::m_mapCBuffer': class 'std::unordered_map<::size_t,PCBuffer,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=PCBuffer
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(10): note: 'std::unordered_map<::size_t,PCBuffer,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=PCBuffer
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(11): warning C4251: 'CShaderManager::m_vecInputDesc': class 'std::vector<D3D11_INPUT_ELEMENT_DESC,std::allocator<_Ty>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=D3D11_INPUT_ELEMENT_DESC
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(11): note: 'std::vector<D3D11_INPUT_ELEMENT_DESC,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=D3D11_INPUT_ELEMENT_DESC
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\material.h(44): warning C4251: 'CMaterial::m_vecContainer': class 'std::vector<PMaterialContainer,std::allocator<_Ty>>'에서는 class 'CMaterial'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PMaterialContainer
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\material.h(44): note: 'std::vector<PMaterialContainer,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PMaterialContainer
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\material.h(48): warning C4251: 'CMaterial::m_mapCBuffer': class 'std::unordered_map<::size_t,PCBufferNode,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CMaterial'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=PCBufferNode
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\material.h(48): note: 'std::unordered_map<::size_t,PCBufferNode,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=PCBufferNode
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(23): warning C4251: 'CColliderBase::m_vecBlockCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(24): warning C4251: 'CColliderBase::m_vecBeginOverlapCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(25): warning C4251: 'CColliderBase::m_vecEndOverlapCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(28): warning C4251: 'CColliderBase::m_CurrentFrameCollision': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(28): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(29): warning C4251: 'CColliderBase::m_CollisionList': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(28): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(30): warning C4251: 'CColliderBase::m_vecSectionIndex': class 'std::vector<unsigned int,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=unsigned int
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(30): note: 'std::vector<unsigned int,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=unsigned int
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\tilemap.h(32): warning C4251: 'CTileMap::m_vecFrame': class 'std::vector<ImageFrame,std::allocator<_Ty>>'에서는 class 'CTileMap'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=ImageFrame
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\tilemap.h(32): note: 'std::vector<ImageFrame,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=ImageFrame
          ]
  ChildObj.cpp
e:\lecture\26th\directx\gameengine\engine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.14393.0\um\directxmath.h(451): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
e:\lecture\26th\directx\gameengine\engine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring(3997): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
e:\lecture\26th\directx\gameengine\engine\include\component\scenecomponent.h(15): warning C4251: 'CSceneComponent::m_vecChild': class 'std::vector<CSceneComponent *,std::allocator<_Ty>>'에서는 class 'CSceneComponent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CSceneComponent *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\scenecomponent.h(15): note: 'std::vector<CSceneComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CSceneComponent *
          ]
e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(19): warning C4251: 'CGameObject::m_vecObjComponent': class 'std::vector<CObjectComponent *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CObjectComponent *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(19): note: 'std::vector<CObjectComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CObjectComponent *
          ]
e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(20): warning C4251: 'CGameObject::m_vecChild': class 'std::vector<CGameObject *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(20): note: 'std::vector<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(22): warning C4251: 'CGameObject::m_BeginList': class 'std::list<CComponent *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CComponent *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(22): note: 'std::list<CComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CComponent *
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\transform.h(16): warning C4251: 'CTransform::m_vecChild': class 'std::vector<CTransform *,std::allocator<_Ty>>'에서는 class 'CTransform'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CTransform *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\transform.h(16): note: 'std::vector<CTransform *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CTransform *
          ]
e:\lecture\26th\directx\gameengine\engine\include\scene\scene.h(26): warning C4251: 'CScene::m_ObjList': class 'std::list<CGameObject *,std::allocator<_Ty>>'에서는 class 'CScene'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\scene\scene.h(26): note: 'std::list<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
e:\lecture\26th\directx\gameengine\engine\include\scene\scene.h(27): warning C4251: 'CScene::m_BeginList': class 'std::list<CGameObject *,std::allocator<_Ty>>'에서는 class 'CScene'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\scene\scene.h(26): note: 'std::list<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(8): warning C4251: 'CResourceManager::m_mapMesh': class 'std::unordered_map<::size_t,CMesh *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CMesh *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(8): note: 'std::unordered_map<::size_t,CMesh *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CMesh *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(9): warning C4251: 'CResourceManager::m_mapTexture': class 'std::unordered_map<::size_t,CTexture *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CTexture *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(9): note: 'std::unordered_map<::size_t,CTexture *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CTexture *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(10): warning C4251: 'CResourceManager::m_mapMaterial': class 'std::unordered_map<::size_t,CMaterial *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CMaterial *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(10): note: 'std::unordered_map<::size_t,CMaterial *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CMaterial *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(11): warning C4251: 'CResourceManager::m_mapSampler': class 'std::unordered_map<::size_t,ID3D11SamplerState *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=ID3D11SamplerState *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(11): note: 'std::unordered_map<::size_t,ID3D11SamplerState *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=ID3D11SamplerState *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(12): warning C4251: 'CResourceManager::m_mapRenderState': class 'std::unordered_map<::size_t,CRenderState *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CRenderState *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(12): note: 'std::unordered_map<::size_t,CRenderState *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CRenderState *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(13): warning C4251: 'CResourceManager::m_mapAnim2DSequence': class 'std::unordered_map<::size_t,CAnimation2DSequence *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CAnimation2DSequence *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(13): note: 'std::unordered_map<::size_t,CAnimation2DSequence *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CAnimation2DSequence *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): warning C4251: 'CResourceManager::m_DefaultMeshList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(15): warning C4251: 'CResourceManager::m_DefaultTextureList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(16): warning C4251: 'CResourceManager::m_DefaultRenderStateList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(17): warning C4251: 'CResourceManager::m_DefaultMaterialList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(18): warning C4251: 'CResourceManager::m_MaterialIter': class 'std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<const _Kty,_Ty>>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CMaterial *
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list(571): note: 'std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<const _Kty,_Ty>>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CMaterial *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\mesh.h(22): warning C4251: 'CMesh::m_vecMeshContainer': class 'std::vector<PMeshContainer,std::allocator<_Ty>>'에서는 class 'CMesh'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PMeshContainer
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\mesh.h(22): note: 'std::vector<PMeshContainer,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PMeshContainer
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(8): warning C4251: 'CShaderManager::m_mapShader': class 'std::unordered_map<::size_t,CShader *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CShader *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(8): note: 'std::unordered_map<::size_t,CShader *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CShader *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(9): warning C4251: 'CShaderManager::m_mapInputLayout': class 'std::unordered_map<::size_t,ID3D11InputLayout *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=ID3D11InputLayout *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(9): note: 'std::unordered_map<::size_t,ID3D11InputLayout *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=ID3D11InputLayout *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(10): warning C4251: 'CShaderManager::m_mapCBuffer': class 'std::unordered_map<::size_t,PCBuffer,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=PCBuffer
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(10): note: 'std::unordered_map<::size_t,PCBuffer,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=PCBuffer
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(11): warning C4251: 'CShaderManager::m_vecInputDesc': class 'std::vector<D3D11_INPUT_ELEMENT_DESC,std::allocator<_Ty>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=D3D11_INPUT_ELEMENT_DESC
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(11): note: 'std::vector<D3D11_INPUT_ELEMENT_DESC,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=D3D11_INPUT_ELEMENT_DESC
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\material.h(44): warning C4251: 'CMaterial::m_vecContainer': class 'std::vector<PMaterialContainer,std::allocator<_Ty>>'에서는 class 'CMaterial'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PMaterialContainer
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\material.h(44): note: 'std::vector<PMaterialContainer,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PMaterialContainer
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\material.h(48): warning C4251: 'CMaterial::m_mapCBuffer': class 'std::unordered_map<::size_t,PCBufferNode,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CMaterial'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=PCBufferNode
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\material.h(48): note: 'std::unordered_map<::size_t,PCBufferNode,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=PCBufferNode
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(23): warning C4251: 'CColliderBase::m_vecBlockCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(24): warning C4251: 'CColliderBase::m_vecBeginOverlapCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(25): warning C4251: 'CColliderBase::m_vecEndOverlapCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(28): warning C4251: 'CColliderBase::m_CurrentFrameCollision': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(28): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(29): warning C4251: 'CColliderBase::m_CollisionList': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(28): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(30): warning C4251: 'CColliderBase::m_vecSectionIndex': class 'std::vector<unsigned int,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=unsigned int
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(30): note: 'std::vector<unsigned int,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=unsigned int
          ]
e:\lecture\26th\directx\gameengine\engine\include\input.h(120): warning C4251: 'CInput::m_tKeyInfo': struct '_tagKeyInfo'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  e:\lecture\26th\directx\gameengine\engine\include\input.h(29): note: '_tagKeyInfo' 선언을 참조하십시오.
e:\lecture\26th\directx\gameengine\engine\include\input.h(122): warning C4251: 'CInput::m_mapAxis': class 'std::unordered_map<::size_t,PKeyAxis,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=PKeyAxis
          ]
  e:\lecture\26th\directx\gameengine\engine\include\input.h(122): note: 'std::unordered_map<::size_t,PKeyAxis,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=PKeyAxis
          ]
e:\lecture\26th\directx\gameengine\engine\include\input.h(123): warning C4251: 'CInput::m_mapAction': class 'std::unordered_map<::size_t,PKeyAction,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=PKeyAction
          ]
  e:\lecture\26th\directx\gameengine\engine\include\input.h(123): note: 'std::unordered_map<::size_t,PKeyAction,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=PKeyAction
          ]
e:\lecture\26th\directx\gameengine\engine\include\input.h(124): warning C4251: 'CInput::m_UseKeyList': class 'std::list<unsigned char,std::allocator<_Ty>>'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=unsigned char
          ]
  e:\lecture\26th\directx\gameengine\engine\include\input.h(124): note: 'std::list<unsigned char,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=unsigned char
          ]
e:\lecture\26th\directx\gameengine\engine\include\input.h(137): warning C4251: 'CInput::m_tMouseInfo': struct '_tagKeyInfo'에서는 class 'CInput'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  e:\lecture\26th\directx\gameengine\engine\include\input.h(29): note: '_tagKeyInfo' 선언을 참조하십시오.
  Bullet.cpp
e:\lecture\26th\directx\gameengine\engine\include\matrix.h(7): warning C4251: '_tagMatrix::m': struct 'DirectX::XMMATRIX'에서는 union '_tagMatrix'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\windows kits\10\include\10.0.14393.0\um\directxmath.h(451): note: 'DirectX::XMMATRIX' 선언을 참조하십시오.
e:\lecture\26th\directx\gameengine\engine\include\ref.h(13): warning C4251: 'CRef::m_strName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'CRef'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\xstring(3997): note: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
e:\lecture\26th\directx\gameengine\engine\include\component\scenecomponent.h(15): warning C4251: 'CSceneComponent::m_vecChild': class 'std::vector<CSceneComponent *,std::allocator<_Ty>>'에서는 class 'CSceneComponent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CSceneComponent *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\scenecomponent.h(15): note: 'std::vector<CSceneComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CSceneComponent *
          ]
e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(19): warning C4251: 'CGameObject::m_vecObjComponent': class 'std::vector<CObjectComponent *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CObjectComponent *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(19): note: 'std::vector<CObjectComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CObjectComponent *
          ]
e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(20): warning C4251: 'CGameObject::m_vecChild': class 'std::vector<CGameObject *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(20): note: 'std::vector<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(22): warning C4251: 'CGameObject::m_BeginList': class 'std::list<CComponent *,std::allocator<_Ty>>'에서는 class 'CGameObject'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CComponent *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\object\gameobject.h(22): note: 'std::list<CComponent *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CComponent *
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\transform.h(16): warning C4251: 'CTransform::m_vecChild': class 'std::vector<CTransform *,std::allocator<_Ty>>'에서는 class 'CTransform'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CTransform *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\transform.h(16): note: 'std::vector<CTransform *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CTransform *
          ]
e:\lecture\26th\directx\gameengine\engine\include\scene\scene.h(26): warning C4251: 'CScene::m_ObjList': class 'std::list<CGameObject *,std::allocator<_Ty>>'에서는 class 'CScene'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\scene\scene.h(26): note: 'std::list<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
e:\lecture\26th\directx\gameengine\engine\include\scene\scene.h(27): warning C4251: 'CScene::m_BeginList': class 'std::list<CGameObject *,std::allocator<_Ty>>'에서는 class 'CScene'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CGameObject *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\scene\scene.h(26): note: 'std::list<CGameObject *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CGameObject *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(8): warning C4251: 'CResourceManager::m_mapMesh': class 'std::unordered_map<::size_t,CMesh *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CMesh *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(8): note: 'std::unordered_map<::size_t,CMesh *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CMesh *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(9): warning C4251: 'CResourceManager::m_mapTexture': class 'std::unordered_map<::size_t,CTexture *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CTexture *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(9): note: 'std::unordered_map<::size_t,CTexture *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CTexture *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(10): warning C4251: 'CResourceManager::m_mapMaterial': class 'std::unordered_map<::size_t,CMaterial *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CMaterial *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(10): note: 'std::unordered_map<::size_t,CMaterial *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CMaterial *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(11): warning C4251: 'CResourceManager::m_mapSampler': class 'std::unordered_map<::size_t,ID3D11SamplerState *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=ID3D11SamplerState *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(11): note: 'std::unordered_map<::size_t,ID3D11SamplerState *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=ID3D11SamplerState *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(12): warning C4251: 'CResourceManager::m_mapRenderState': class 'std::unordered_map<::size_t,CRenderState *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CRenderState *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(12): note: 'std::unordered_map<::size_t,CRenderState *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CRenderState *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(13): warning C4251: 'CResourceManager::m_mapAnim2DSequence': class 'std::unordered_map<::size_t,CAnimation2DSequence *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CAnimation2DSequence *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(13): note: 'std::unordered_map<::size_t,CAnimation2DSequence *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CAnimation2DSequence *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): warning C4251: 'CResourceManager::m_DefaultMeshList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(15): warning C4251: 'CResourceManager::m_DefaultTextureList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(16): warning C4251: 'CResourceManager::m_DefaultRenderStateList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(17): warning C4251: 'CResourceManager::m_DefaultMaterialList': class 'std::list<std::string,std::allocator<_Ty>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::string
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(14): note: 'std::list<std::string,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::string
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\resourcemanager.h(18): warning C4251: 'CResourceManager::m_MaterialIter': class 'std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<const _Kty,_Ty>>>>'에서는 class 'CResourceManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CMaterial *
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.10.25017\include\list(571): note: 'std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<const _Kty,_Ty>>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CMaterial *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\mesh.h(22): warning C4251: 'CMesh::m_vecMeshContainer': class 'std::vector<PMeshContainer,std::allocator<_Ty>>'에서는 class 'CMesh'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PMeshContainer
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\mesh.h(22): note: 'std::vector<PMeshContainer,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PMeshContainer
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(8): warning C4251: 'CShaderManager::m_mapShader': class 'std::unordered_map<::size_t,CShader *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=CShader *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(8): note: 'std::unordered_map<::size_t,CShader *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=CShader *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(9): warning C4251: 'CShaderManager::m_mapInputLayout': class 'std::unordered_map<::size_t,ID3D11InputLayout *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=ID3D11InputLayout *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(9): note: 'std::unordered_map<::size_t,ID3D11InputLayout *,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=ID3D11InputLayout *
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(10): warning C4251: 'CShaderManager::m_mapCBuffer': class 'std::unordered_map<::size_t,PCBuffer,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=PCBuffer
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(10): note: 'std::unordered_map<::size_t,PCBuffer,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=PCBuffer
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(11): warning C4251: 'CShaderManager::m_vecInputDesc': class 'std::vector<D3D11_INPUT_ELEMENT_DESC,std::allocator<_Ty>>'에서는 class 'CShaderManager'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=D3D11_INPUT_ELEMENT_DESC
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\shadermanager.h(11): note: 'std::vector<D3D11_INPUT_ELEMENT_DESC,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=D3D11_INPUT_ELEMENT_DESC
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\material.h(44): warning C4251: 'CMaterial::m_vecContainer': class 'std::vector<PMaterialContainer,std::allocator<_Ty>>'에서는 class 'CMaterial'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=PMaterialContainer
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\material.h(44): note: 'std::vector<PMaterialContainer,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=PMaterialContainer
          ]
e:\lecture\26th\directx\gameengine\engine\include\resource\material.h(48): warning C4251: 'CMaterial::m_mapCBuffer': class 'std::unordered_map<::size_t,PCBufferNode,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'에서는 class 'CMaterial'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=::size_t,
              _Ty=PCBufferNode
          ]
  e:\lecture\26th\directx\gameengine\engine\include\resource\material.h(48): note: 'std::unordered_map<::size_t,PCBufferNode,std::hash<unsigned __int64>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=::size_t,
              _Ty=PCBufferNode
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(23): warning C4251: 'CColliderBase::m_vecBlockCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(24): warning C4251: 'CColliderBase::m_vecBeginOverlapCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(25): warning C4251: 'CColliderBase::m_vecEndOverlapCallback': class 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(23): note: 'std::vector<std::function<void (CColliderBase *,CColliderBase *,float)>,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=std::function<void (CColliderBase *,CColliderBase *,float)>
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(28): warning C4251: 'CColliderBase::m_CurrentFrameCollision': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(28): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(29): warning C4251: 'CColliderBase::m_CollisionList': class 'std::list<CColliderBase *,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=CColliderBase *
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(28): note: 'std::list<CColliderBase *,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=CColliderBase *
          ]
e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(30): warning C4251: 'CColliderBase::m_vecSectionIndex': class 'std::vector<unsigned int,std::allocator<_Ty>>'에서는 class 'CColliderBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=unsigned int
          ]
  e:\lecture\26th\directx\gameengine\engine\include\component\colliderbase.h(30): note: 'std::vector<unsigned int,std::allocator<_Ty>>' 선언을 참조하십시오.
          with
          [
              _Ty=unsigned int
          ]
  코드를 생성하고 있습니다...
  Client.vcxproj -> E:\Lecture\26th\DirectX\GameEngine\Client\Include\../Bin/Client_Debug.exe
  Client.vcxproj -> ../Bin/Client_Debug.pdb (Partial PDB)
